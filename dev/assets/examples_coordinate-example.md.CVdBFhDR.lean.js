import{_ as l}from"./chunks/coordinate.1IApRZUJ.js";import{_ as k,c as h,o as t,a2 as n,j as i,a}from"./chunks/framework.Nc7lxcPW.js";const u=JSON.parse('{"title":"Coordinates with inclination (θs)","description":"","frontmatter":{},"headers":[],"relativePath":"examples/coordinate-example.md","filePath":"examples/coordinate-example.md","lastUpdated":null}'),p={name:"examples/coordinate-example.md"},e={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},r={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.999ex",height:"1.95ex",role:"img",focusable:"false",viewBox:"0 -705 883.6 862.1","aria-hidden":"true"};function E(d,s,g,y,o,c){return t(),h("div",null,[s[12]||(s[12]=n("",10)),i("p",null,[s[2]||(s[2]=a("Let's define a function that will return the coordinates of a ray when it intersects with a cone of opening angle ")),i("mjx-container",e,[(t(),h("svg",r,s[0]||(s[0]=[n("",1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("msub",null,[i("mi",null,"θ"),i("mi",null,"s")])])],-1))]),s[3]||(s[3]=a(". Coordinate information can be accessed using the ")),s[4]||(s[4]=i("code",null,"emission_coordinates(pixel, θs, isindir, n)",-1)),s[5]||(s[5]=a(" function, which returns the coordiante information for a sub-image ")),s[6]||(s[6]=i("code",null,"n",-1)),s[7]||(s[7]=a(" associated with the ray at the pixel ")),s[8]||(s[8]=i("code",null,"pixel",-1)),s[9]||(s[9]=a(" which intersects a cone with opening angle ")),s[10]||(s[10]=i("code",null,"θs",-1)),s[11]||(s[11]=a(". We will define a function which introduces some basic occlusion effects by checking if the ray has intersected with the cone on the 'far-side' or the 'near-side' from the obsever."))]),s[13]||(s[13]=n("",17))])}const m=k(p,[["render",E]]);export{u as __pageData,m as default};
