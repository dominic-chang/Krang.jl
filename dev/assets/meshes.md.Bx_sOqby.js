import{_ as a,c as t,o as s,a2 as r}from"./chunks/framework.ZDB5ZRfL.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"meshes.md","filePath":"meshes.md","lastUpdated":null}'),i={name:"meshes.md"};function o(n,e,c,d,h,l){return s(),t("div",null,e[0]||(e[0]=[r('<h2 id="Meshes" tabindex="-1">Meshes <a class="header-anchor" href="#Meshes" aria-label="Permalink to &quot;Meshes {#Meshes}&quot;">​</a></h2><p>Meshes are the simplest objects in Krang that can be rendered to an image. Each mesh is made from material that defines emission mechanics, and a geometry that defines where the emission mechanics occur in the spacetime.</p><h3 id="Geometries" tabindex="-1">Geometries <a class="header-anchor" href="#Geometries" aria-label="Permalink to &quot;Geometries {#Geometries}&quot;">​</a></h3><p>Geometries define the regions in spacetime where the emission physics originates from. There are three basic geometries currently available in <code>Krang</code>.</p><ul><li><p><code>ConeGeometry</code> : A spin axis centered cone with its apex placed at the coordinate origin.</p></li><li><p><code>MeshGeometry</code> : A geometry made from a <a href="https://en.wikipedia.org/wiki/Triangle_mesh" target="_blank" rel="noreferrer">triangle mesh</a>. The mesh is embedded by placing vertices at points in the Cartesian Kerr-Schild coordinate system. Check out the <a href="/Krang.jl/dev/examples/ray-tracing-mesh-example#Raytracing-a-Triangular-Mesh">Raytracing a Triangular Mesh</a></p></li></ul><p>There are convenience functions defines to <code>translate</code>, <code>rotate</code> and <code>scale</code> these geometries.</p><ul><li><code>LevelSetGeometry</code> : A geometry defined by a level set function expressed in the Cartesian Kerr-Schild coordinate system.</li></ul><h3 id="Materials" tabindex="-1">Materials <a class="header-anchor" href="#Materials" aria-label="Permalink to &quot;Materials {#Materials}&quot;">​</a></h3><p>Materials define the local emission physics necessary to render geometries. Materials may sometimes need additional information that can be stored in geometries by passing <code>attributes</code> to the geometry constructor.</p>',9)]))}const g=a(i,[["render",o]]);export{p as __pageData,g as default};
