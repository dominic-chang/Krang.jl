import{_ as e,c as i,o as s,a2 as t}from"./chunks/framework.ZDB5ZRfL.js";const m=JSON.parse('{"title":"What is Krang.jl?","description":"","frontmatter":{},"headers":[],"relativePath":"what_is_krang.md","filePath":"what_is_krang.md","lastUpdated":null}'),r={name:"what_is_krang.md"};function o(n,a,l,h,c,d){return s(),i("div",null,a[0]||(a[0]=[t('<h1 id="What-is-Krang.jl?" tabindex="-1">What is Krang.jl? <a class="header-anchor" href="#What-is-Krang.jl?" aria-label="Permalink to &quot;What is Krang.jl? {#What-is-Krang.jl?}&quot;">​</a></h1><p>Kerr Raytracer for Analytic Null Geodesics (Krang) is a raytracing code for geometries that are embedded in the Kerr spacetime. Krang solves the Kerr geodesic problem using analytic solutions derived from the Hamilton-Jacobi formalism. This choice makes the code efficient and accurate, and is ideal for decomposing images into the characteristic sub-images which manifest from strong gravitational lensing.</p><h2 id="Philosophy" tabindex="-1">Philosophy <a class="header-anchor" href="#Philosophy" aria-label="Permalink to &quot;Philosophy {#Philosophy}&quot;">​</a></h2><p>Krang operates by ray tracing &#39;meshes&#39; which can be thought of as a geometry that presents some sort of physics material. The meshes are viewed by cameras that are sensitive to particular observables (<em>e.g.intensity and polarization</em>).</p><h2 id="Examples" tabindex="-1">Examples <a class="header-anchor" href="#Examples" aria-label="Permalink to &quot;Examples {#Examples}&quot;">​</a></h2><p>Some pedagogical example usage of the raytracing code in the <a href="./examples/coordinate-example">Examples</a> section. These examples primarily use <code>CairoMakie</code> and <code>GLMakie</code> for plotting. You can install these by enering the <code>julia</code> package mode and running:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> add CairoMakie GLMakie</span></span></code></pre></div>',7)]))}const g=e(r,[["render",o]]);export{m as __pageData,g as default};
